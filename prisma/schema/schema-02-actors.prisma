/// Guest account entity that represents unauthenticated users with read-only
/// access to public content. This table enforces that all operations
/// requiring authentication are blocked at the data layer, and no
/// user-specific state is persisted. Used to prevent unauthorized access to
/// write operations.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_guest {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Timestamp when the guest session began. This field tracks access time for
  /// analytics but does not store persistent user state.
  created_at DateTime
  
  /// IP address of the guest user. Used for analytics and spam detection. Not
  /// used for authentication.
  ip_address String?
  
  //----
  // RELATIONS
  //----
  @@index([created_at])
  @@index([ip_address])
}

/// Member account entity that represents authenticated users with full
/// participation rights including posting, commenting, voting, and joining
/// communities. This table stores authentication credentials and user
/// preferences. Member accounts own all content they create and can
/// edit/delete only their own content.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_member {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// User's email address used for authentication and communication. Must be
  /// unique across all members.
  email String
  
  /// Hashed password for authentication. Never stores plain text passwords.
  /// Required for member login according to authentication requirements.
  password_hash String
  
  /// Optional display name for posts and comments. If empty, system defaults
  /// to 'Anonymous'. Length constrained to 32 characters by business rules.
  display_name String?
  
  /// Timestamp when the member account was created. Used for user onboarding
  /// analytics and account age calculation.
  created_at DateTime
  
  /// Timestamp of the member's last successful login. Used to determine
  /// session validity and user activity status.
  last_login_at DateTime?
  
  /// Soft delete timestamp. When set, the member account is considered
  /// deactivated but persisted for audit trail purposes. Required for soft
  /// delete capability per requirements.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  community_platform_admin community_platform_admin?
  community_platform_posts community_platform_posts[]
  community_platform_comments community_platform_comments[]
  community_platform_post_votes community_platform_post_votes[]
  community_platform_comment_votes community_platform_comment_votes[]
  community_platform_user_communities community_platform_user_communities[]
  
  @@unique([email])
  @@index([created_at])
  @@index([last_login_at])
  @@index([deleted_at])
}

/// Admin account entity that represents privileged members with elevated
/// permissions including moderation and content deletion. Admins inherit all
/// member privileges and can override content ownership restrictions. This
/// table ensures admin privileges are isolated and auditable, with admin
/// role enforced server-side.
///
/// @namespace Actors
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model community_platform_admin {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to the underlying member account. Admin is a privilege level
  /// granted to an existing member. {@link community_platform_member.id}.
  member_id String
  
  /// Timestamp when admin privileges were granted. Used for audit trail and
  /// privilege duration analysis.
  created_at DateTime
  
  /// Soft delete timestamp. When set, admin privileges are revoked but audit
  /// trail is preserved. Required for soft delete capability per requirements.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  member community_platform_member @relation(fields: [member_id], references: [id], onDelete: Cascade)
  
  @@unique([member_id])
  @@index([created_at])
  @@index([deleted_at])
}