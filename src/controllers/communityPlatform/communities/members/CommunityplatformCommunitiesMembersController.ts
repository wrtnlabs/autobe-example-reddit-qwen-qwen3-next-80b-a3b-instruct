import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia from "typia";
import { patchCommunityPlatformCommunitiesCommunityNameMembers } from "../../../../providers/patchCommunityPlatformCommunitiesCommunityNameMembers";

import { IPageICommunityPlatformCommunityPlatformUserCommunityISummary } from "../../../../api/structures/IPageICommunityPlatformCommunityPlatformUserCommunityISummary";
import { ICommunityPlatformCommunityPlatformUserCommunityIRequest } from "../../../../api/structures/ICommunityPlatformCommunityPlatformUserCommunityIRequest";

@Controller("/communityPlatform/communities/:communityName/members")
export class CommunityplatformCommunitiesMembersController {
  /**
   * Search and retrieve members of a specific community.
   *
   * Retrieve a filtered and paginated list of users who have joined a specific
   * community. This operation provides advanced search capabilities for finding
   * community members based on various criteria including username, join date,
   * and last interaction time.
   *
   * The operation supports comprehensive pagination with configurable page
   * sizes and sorting options. Members can sort by join date, last interaction,
   * or username in ascending or descending order. This endpoint is crucial for
   * the 'Recent Communities' list functionality, where the system displays the
   * 5 most recently active communities based on user interaction timestamps.
   *
   * Security considerations include rate limiting for search operations and
   * appropriate filtering of member information based on the requesting user's
   * authorization level. Only authenticated users can access member lists for
   * communities they have permission to view, while community creators and
   * admins can access complete member information. Unauthorized users
   * attempting to access this endpoint will receive a 401 Unauthorized
   * response.
   *
   * This operation integrates with the community_platform_user_communities
   * table as defined in the Prisma schema, incorporating all available
   * membership fields and relationships. The response includes user summary
   * information optimized for list displays, with options to include additional
   * details based on authorization level.
   *
   * @param connection
   * @param communityName Unique alphanumeric identifier of the target
   *   community. Must be 5 to 64 characters and may contain hyphens (-) and
   *   underscores (_). This corresponds to the name field in the
   *   community_platform_communities table.
   * @param body Search criteria and pagination parameters for filtering
   *   community members
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @TypedParam("communityName")
    communityName: string,
    @TypedBody()
    body: ICommunityPlatformCommunityPlatformUserCommunityIRequest,
  ): Promise<IPageICommunityPlatformCommunityPlatformUserCommunityISummary> {
    try {
      return await patchCommunityPlatformCommunitiesCommunityNameMembers({
        communityName,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
