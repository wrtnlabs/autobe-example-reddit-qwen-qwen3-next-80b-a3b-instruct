import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents an administrator user of the Community BBS platform with elevated
 * privileges.
 *
 * This schema defines the basic account information for system administrators
 * who can perform moderation actions, manage communities, and oversee user
 * accounts.
 *
 * Administrators are distinct from regular members - they have authority to
 * delete and create communities, ban users, and modify system settings, but
 * have no access to user passwords.
 *
 * There are no sensitive fields (like passwords) included in this response as
 * per security requirements - authentication credentials are never exposed
 * through API responses.
 *
 * This schema provides the minimal necessary context for identifying
 * administrators in audit logs and management interfaces.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunitybbsAdministrator = {
  /**
   * Unique identifier for the administrator account.
   *
   * This UUID is generated by the system upon creation and serves as the
   * primary key in the communitybbs_administrator table.
   *
   * It is used to uniquely identify administrators across all system
   * operations and records.
   *
   * This field is immutable after creation.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The email address associated with the administrator account.
   *
   * This serves as the primary login identifier for administrators and must
   * be unique across the system.
   *
   * This follows the same format requirements as member emails but is managed
   * in a separate table to enforce role separation.
   *
   * This field is persistent and required for authentication.
   */
  email: string & tags.Format<"email">;

  /**
   * The human-readable display name used for administrators in the UI and
   * audit logs.
   *
   * This name is used in moderation logs, interface displays, and
   * administrative communications.
   *
   * It can be modified by the administrator but must be between 1 and 32
   * characters.
   *
   * If not provided during account creation, it defaults to the username
   * portion of the email address.
   */
  display_name: string & tags.MinLength<1> & tags.MaxLength<32>;

  /**
   * The timestamp when this administrator account was created.
   *
   * This field records the exact moment the account was created and is set by
   * the system.
   *
   * This value is immutable and used for audit trails, reporting, and
   * determining account age.
   *
   * The format follows ISO 8601 standard with timezone information.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * The timestamp when this administrator's profile was last modified.
   *
   * This field is automatically updated whenever any administrator field
   * changes (e.g., display_name).
   *
   * It does not reflect activity or login events - only changes to the
   * profile data itself.
   *
   * The format follows ISO 8601 standard with timezone information.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunitybbsAdministrator {
  /**
   * Authorization response containing JWT token for administrators.
   *
   * This response is returned after a successful administrator login. It
   * includes the admin's unique identifier and an access token for subsequent
   * authenticated administrative requests.
   */
  export type IAuthorized = {
    /**
     * Unique identifier of the authenticated administrator.
     *
     * The unique identifier for the administrator who successfully
     * authenticated. This field identifies the administrator in subsequent
     * operations.
     */
    id: string & tags.Format<"uuid">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };
}
