import { tags } from "typia";

/**
 * Simplified response version with essential properties for list views.
 *
 * This type provides a lightweight representation of community data suitable
 * for display in lists and summaries where complete community details are not
 * necessary. It omits sensitive or verbose information like rules, logo, and
 * banner while preserving essential metadata for rendering community
 * information in the Explore feed and search results.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommunitySummary = {
  /**
   * Primary Key.
   *
   * Unique identifier for the community. This is used internally to reference
   * the community in all related records, including posts, comments, and user
   * memberships.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique alphanumeric identifier for the community. May contain hyphens (-)
   * and underscores (_). Must be 5 to 64 characters long. Immutable after
   * creation.
   *
   * The community name is used in URLs and serves as the primary identifier
   * for users to find and reference the community. It must be unique across
   * the entire platform and follows strict format rules for readability and
   * URL compatibility.
   */
  name: string;

  /**
   * The predefined category this community belongs to. Must be one of: ["Tech
   * & Programming", "Science", "Movies & TV", "Games", "Sports", "Lifestyle &
   * Wellness", "Study & Education", "Art & Design", "Business & Finance",
   * "News & Current Affairs"].
   *
   * This categorization helps users discover and filter communities based on
   * topics of interest. The category is selected during creation and cannot
   * be changed afterward.
   */
  category: string;

  /**
   * Optional summary text with a maximum length of 500 characters. Describes
   * the community's purpose and rules.
   *
   * This field provides a brief overview of the community's focus and goals.
   * It is displayed in community listings and search results to help users
   * understand the community's purpose before joining. The limit ensures
   * concise presentation.
   */
  description?: string | undefined;

  /**
   * Current number of users who have joined this community. Updated in
   * real-time when users join or leave. Displayed as "1k" for ≥1000, "1m" for
   * ≥1000000.
   *
   * This is a denormalized counter maintained in a separate analytics table
   * for performance optimization. It reflects the real-time active membership
   * count and is used in all UI displays to indicate community size and
   * popularity.
   */
  member_count: number & tags.Type<"int32">;

  /**
   * Timestamp when this community was created. Used for sorting in "Recently
   * Created" search and internal audit tracking.
   *
   * This immutable timestamp marks when the community was officially
   * established on the platform. It is used to determine recency in search
   * results, for audit purposes, and to calculate how long a community has
   * been active.
   */
  created_at: string & tags.Format<"date-time">;
};
