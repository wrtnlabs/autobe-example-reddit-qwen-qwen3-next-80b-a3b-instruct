import { tags } from "typia";

/**
 * Summary representation of a post for list views and feed rendering.
 *
 * This schema is optimized for displaying posts in the Home feed, Community
 * Home feeds, and search results. It provides essential information for post
 * previews while minimizing payload size and computational overhead.
 *
 * The summary includes only the data required for the user interface: post
 * title, author name (or 'Anonymous'), creation time, comment count, score, and
 * community name. It excludes the full post body, which would be expensive to
 * transfer for large lists. The score and comment count are sourced from
 * denormalized tables to ensure optimal performance for busy feeds.
 *
 * This structure supports the 20-item-per-page pagination requirement and
 * enables the 'Load more' functionality by providing all necessary data to
 * render each post card in the feed without additional API calls.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommunityPlatformPostISummary = {
  /**
   * Unique identifier of the post.
   *
   * This UUID serves as the primary key for each post in the system and is
   * used to uniquely identify the content item across all operations and
   * relationships, including comments, votes, and search records.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The title of the post.
   *
   * This field contains a brief summary or headline for the post, required to
   * be between 5 and 120 characters. It is the primary field used for
   * displaying post previews in feeds, search results, and community lists.
   * The title must be plain text with no HTML, markdown, or executable
   * content.
   */
  title: string & tags.MinLength<5> & tags.MaxLength<120>;

  /**
   * The display name of the post's author.
   *
   * This field contains the optional custom name that the post's author has
   * chosen to appear publicly. If this field is empty or null, the system
   * defaults to displaying 'Anonymous' as the author.
   *
   * The author display name has a maximum length of 32 characters and should
   * consist of readable text. It is associated with the post at the time of
   * creation and does not change if the author subsequently changes their
   * profile display name.
   *
   * This field is designed to provide anonymity while allowing users to
   * choose recognizable identifiers when desired.
   */
  author_display_name?: string | undefined;

  /**
   * The timestamp when the post was created.
   *
   * This field records the exact date and time when the post was first
   * published to the system. It is used as the primary sorting criterion in
   * 'Newest' feed order and as a secondary criterion when posts have equal
   * scores in 'Top' views.
   *
   * The timestamp is stored in ISO 8601 format with timezone information
   * (UTC).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * The total number of comments on this post.
   *
   * This field represents the count of all active comments (where deleted_at
   * is null) associated with the post. It is stored in the
   * community_platform_post_stats denormalized table to enable fast retrieval
   * without executing expensive JOIN operations on the comments table.
   *
   * For display purposes, counts of 1,000 or more are abbreviated as '1k',
   * '10k', '1m' etc. in the UI, though the underlying value is stored as a
   * raw integer.
   */
  comment_count: number & tags.Type<"int32">;

  /**
   * The calculated score of the post from upvotes and downvotes.
   *
   * This field represents the net score calculated as (number of upvotes
   * minus number of downvotes). It is used as the primary sorting criterion
   * in 'Top' view order and as a secondary criterion in 'Newest' view when
   * posts have identical creation times.
   *
   * The score is stored in the community_platform_post_stats denormalized
   * table and is updated atomically with every vote action to ensure
   * consistent, high-performance sorting, even with high-volume voting
   * activity.
   *
   * The score is displayed directly in post cards and is the key metric
   * determining post visibility in the 'Top' feed.
   */
  score: number & tags.Type<"int32">;

  /**
   * The name of the community in which this post was created.
   *
   * This field provides the display name of the community (e.g., 'ai',
   * 'science') to which this post belongs. It is used in post cards and
   * search results to indicate the context and topic focus of the post. The
   * name is sourced from the community_platform_communities table and cannot
   * be changed after post creation.
   *
   * This field allows users to quickly identify the community context of
   * posts without needing to navigate to the community page.
   */
  community_name: string &
    tags.MinLength<5> &
    tags.MaxLength<64> &
    tags.Pattern<"^[a-zA-Z0-9_-]+$">;
};
