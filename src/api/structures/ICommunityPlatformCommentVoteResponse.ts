import { tags } from "typia";

/**
 * Represents the response payload after a successful vote action on a comment.
 *
 * This type is returned by the vote creation, update, and deletion endpoints
 * for comments. It contains a single field: score, which is the updated net
 * score of the comment after the vote operation.
 *
 * The score field is crucial for optimistic UI updates. When a user votes on a
 * comment, the frontend immediately shows the new score based on the expected
 * change. This response provides the exact server-verified score for
 * confirmation. If there is a discrepancy between the optimistic prediction and
 * the server's actual value (e.g., due to race conditions), the UI will update
 * to match the server's value.
 *
 * This response does not include information about the vote state itself
 * ('upvote' or 'downvote') because the UI state is already updated based on the
 * initial user interaction and should remain consistent with client action. The
 * server only confirms the final score result.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommentVoteResponse = {
  /**
   * The updated score of the comment after applying the vote change.
   *
   * The score is calculated as the total number of upvotes minus the total
   * number of downvotes for this comment. This value is maintained atomically
   * in the community_platform_comment_stats table and is updated immediately
   * upon any vote action.
   *
   * The score reflects the net popularity of the comment and determines its
   * order in the 'Top' sort of comment threads. It is used by the UI to
   * display the comment's popularity relative to other comments.
   *
   * The response includes this value to support optimistic UI updates. The
   * frontend will update the comment's displayed score immediately upon
   * receiving this response, ensuring a responsive experience even before
   * full server synchronization.
   */
  score: number & tags.Type<"int32">;
};
