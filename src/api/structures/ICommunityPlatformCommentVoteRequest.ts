/**
 * Represents the payload for creating or updating a user's vote on a comment.
 *
 * This type is used when a user interacts with the upvote or downvote buttons
 * on a comment. The system uses this payload to determine the next state of the
 * vote, whether creating a new vote, toggling between upvote and downvote, or
 * removing the vote entirely.
 *
 * The component only requires a single field: vote_state, which indicates the
 * target state. The server logic handles the transition from the current state
 * (none, upvote, or downvote) to the requested state according to business
 * rules.
 *
 * This design avoids the need for multiple endpoints for each possible state
 * change and allows the client to handle voting as a single interaction with
 * consistent semantics.
 *
 * Security Note: This operation is protected by authentication. Users cannot
 * vote on their own comments. If the request comes from the comment's author,
 * the server will reject it with a 403 Forbidden response and display: "You
 * can't vote on your own posts/comments."
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityPlatformCommentVoteRequest = {
  /**
   * The desired vote state to apply to the comment. Must be either 'upvote'
   * or 'downvote'.
   *
   * This field is used to indicate the user's intent regarding their vote on
   * the comment. The system will interpret this value to determine whether to
   * create a new vote record or toggle an existing vote from one state to
   * another.
   *
   * - When a user has no existing vote on the comment, submitting 'upvote' will
   *   create a new upvote record.
   * - When a user has no existing vote on the comment, submitting 'downvote'
   *   will create a new downvote record.
   * - When a user has an existing upvote, submitting 'downvote' will change the
   *   vote to downvote.
   * - When a user has an existing downvote, submitting 'upvote' will change the
   *   vote to upvote.
   * - When a user has an existing vote of either type and submits the same vote
   *   state, the system will remove the vote (set to 'none').
   *
   * The value is case-sensitive and must match exactly one of the permitted
   * enum values. Any other values will result in a 400 Bad Request response.
   */
  vote_state: "upvote" | "downvote";
};
